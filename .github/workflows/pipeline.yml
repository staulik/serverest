name: Automation - Python>>>Behave>>>Pytests

on:
  repository_dispatch:
    types: [devDeploy_qaRegressionTest]
  workflow_dispatch:
  schedule:
    - cron: '0 22 * * 5'  # 19h de Bras√≠lia = 22h UTC (3 horas a mais)

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do c√≥digo
        uses: actions/checkout@v2

      - name: Configurar Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Instalar depend√™ncias Python
        run: |
          python -m pip install --upgrade pip
          pip install behave selenium faker webdriver-manager allure-behave

      - name: Executar testes Behave com evid√™ncias Allure
        run: |
          cd aut_front
          mkdir -p allure-results
          behave -f allure_behave.formatter:AllureFormatter -o allure-results -f pretty || echo "tests_failed=true" >> $GITHUB_ENV

      - name: Instalar Allure CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.27.0/allure-2.27.0.tgz
          tar -zxvf allure-2.27.0.tgz
          sudo mv allure-2.27.0 /opt/allure
          sudo ln -s /opt/allure/bin/allure /usr/bin/allure

      - name: Gerar relat√≥rio Allure
        run: |
          cd aut_front
          allure generate allure-results -o allure-report --clean

      - name: Definir data e nome do relat√≥rio
        id: vars
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
          echo "filename=Report_Teste_Automatizado_BBVA_$(date +'%Y-%m-%d').zip" >> $GITHUB_OUTPUT

      - name: Compactar relat√≥rio com nome din√¢mico
        run: |
          cd aut_front
          zip -r "${{ steps.vars.outputs.filename }}" allure-report

      - name: Criar Release e enviar anexo
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.0-${{ steps.vars.outputs.date }}
          name: "Relat√≥rio Allure - Depto de Testes e Homologa√ß√£o BBVA - ${{ steps.vars.outputs.date }}"
          files: aut_front/${{ steps.vars.outputs.filename }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Criar corpo do e-mail dinamicamente
        run: |
          echo "üìä Relat√≥rio de Testes Automatizados - Depto de Testes e Homologa√ß√£o BBVA" > email_body.txt
          if [[ "${{ env.tests_failed }}" == "true" ]]; then
            echo "‚ùå FALHAS detectadas nos testes." >> email_body.txt
          else
            echo "‚úÖ Todos os testes passaram com sucesso!" >> email_body.txt
          fi
          echo "" >> email_body.txt
          echo "üìà Relat√≥rio dispon√≠vel para download no link abaixo:" >> email_body.txt
          echo "https://github.com/${{ github.repository }}/releases/download/v1.0.0-${{ steps.vars.outputs.date }}/${{ steps.vars.outputs.filename }}" >> email_body.txt

      - name: Enviar relat√≥rio por e-mail (com link da Release)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Relat√≥rio de Testes Automatizados - BBVA (Allure)
          to: silvio.aulik@gmail.com
          cc: staulik10@gmail.com, qatadeu@gmail.com
          from: ${{ secrets.EMAIL_USERNAME }}
          secure: true
          body: file://email_body.txt

      - name: Finaliza√ß√£o
        run: echo "‚úÖ Pipeline finalizada com sucesso e relat√≥rio publicado no GitHub Releases!"




























